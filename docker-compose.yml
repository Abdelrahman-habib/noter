services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: noter-mysql
    restart: unless-stopped
    ports:
      - "3307:3306" # Development port (to avoid conflicts with local MySQL)
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-dev_root_password_change_me}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db/init:/docker-entrypoint-initdb.d:ro
    networks:
      - noter-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Database Migration Service
  migrate:
    build: .
    container_name: noter-migrate
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      GOOSE_DRIVER: ${GOOSE_DRIVER:-mysql}
      GOOSE_DBSTRING: ${GOOSE_DBSTRING:-noter_admin:admin@tcp(mysql:3306)/noter}
      GOOSE_MIGRATION_DIR: ${GOOSE_MIGRATION_DIR:-./db/schema/migrations}
      GOOSE_SEED_DIR: ${GOOSE_SEED_DIR:-./db/schema/seed}
      GOOSE_TABLE: ${GOOSE_TABLE:-noter.goose_migrations}
    networks:
      - noter-network
    command: >
      sh -c "
        echo 'Waiting for MySQL to be ready...' &&
        sleep 5 &&
        echo 'Running migrations...' &&
        goose -dir db/schema/migrations up &&
        echo 'Running seed data...' &&
        goose -dir db/schema/seed -no-versioning up &&
        echo 'Database setup complete!'
      "
    restart: "no"
    profiles:
      - migrate

  # Web Application
  web:
    build: .
    container_name: noter-web
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      HOST: "0.0.0.0"
      PORT: 4444
      DB_DSN: ${DB_DSN:-noter_web:pass@tcp(mysql:3306)/noter}
      ENVIROMENT: ${ENVIROMENT:-development}
      DEBUG: ${DEBUG:-true}
      TLS_CERT: ${TLS_CERT:-./tls/cert.pem}
      TLS_KEY: ${TLS_KEY:-./tls/key.pem}
    ports:
      - "4444:4444"
    volumes:
      # Mount source code for development (enables live reload)
      - .:/app
    working_dir: /app
    networks:
      - noter-network
    entrypoint: ["./entrypoint.sh"]
    command:
      [
        "-addr",
        "0.0.0.0:4444",
        "-env",
        "${ENVIROMENT:-development}",
        "-dsn",
        "${DB_DSN:-noter_web:pass@tcp(mysql:3306)/noter}",
        "-tls-cert",
        "${TLS_CERT:-./tls/cert.pem}",
        "-tls-key",
        "${TLS_KEY:-./tls/key.pem}",
        "-debug",
      ]

  # Development tools service for running linting, testing, etc.
  tools:
    build: .
    container_name: noter-tools
    volumes:
      - .:/app
      - go_mod_cache:/go/pkg/mod
    working_dir: /app
    networks:
      - noter-network
    profiles:
      - tools
    command: ["tail", "-f", "/dev/null"] # Keep container running

volumes:
  go_mod_cache:
    driver: local
  mysql_data:
    driver: local

networks:
  noter-network:
    driver: bridge
